# Info taken from --> https://stackoverflow.com/questions/36772341/reading-hdf-files-into-r-and-converting-them-to-geotiff-rasters


library(gdalUtils)
library(raster)
library(ncdf4)
# I was unable to install "gdal" so I had to download the software "Osgeo 4w" to allow R to run in tandem


setwd("D:/Utenti/Norma/Desktop/exam")

# Provides detailed data on hdf4 files but takes ages
gdalinfo("MOD10A1.A2000055.h23v05.006.2016061160458.hdf") # using one of the MODIS files 


# Tells me what subdatasets are within my hdf4 MODIS files and makes them into a list
sds <- get_subdatasets("MOD10A1.A2000055.h23v05.006.2016061160458.hdf")
sds

[1] "HDF4_EOS:EOS_GRID:MOD10A1.A2000055.h23v05.006.2016061160458.hdf:MOD_Grid_Snow_500m:NDSI_Snow_Cover"                   
[2] "HDF4_EOS:EOS_GRID:MOD10A1.A2000055.h23v05.006.2016061160458.hdf:MOD_Grid_Snow_500m:NDSI_Snow_Cover_Basic_QA"          
[3] "HDF4_EOS:EOS_GRID:MOD10A1.A2000055.h23v05.006.2016061160458.hdf:MOD_Grid_Snow_500m:NDSI_Snow_Cover_Algorithm_Flags_QA"
[4] "HDF4_EOS:EOS_GRID:MOD10A1.A2000055.h23v05.006.2016061160458.hdf:MOD_Grid_Snow_500m:NDSI"                              
[5] "HDF4_EOS:EOS_GRID:MOD10A1.A2000055.h23v05.006.2016061160458.hdf:MOD_Grid_Snow_500m:Snow_Albedo_Daily_Tile"            
[6] "HDF4_EOS:EOS_GRID:MOD10A1.A2000055.h23v05.006.2016061160458.hdf:MOD_Grid_Snow_500m:orbit_pnt"                         
[7] "HDF4_EOS:EOS_GRID:MOD10A1.A2000055.h23v05.006.2016061160458.hdf:MOD_Grid_Snow_500m:granule_pnt"

# I'm only interested in the first subdataset and I can use gdal_translate to convert it to a .tif

gdal_translate(sds[1], dst_dataset = "NAME_I_CHOOSE.tif")

# Load and plot the new .tif

rast <- raster("NAME_I_CHOOSE.tif")
plot(rast)

###########################################################################################################################

# https://stackoverflow.com/questions/36772341/reading-hdf-files-into-r-and-converting-them-to-geotiff-rasters


# LOOP

setwd("G:/temp_2000_2003")

files <- dir(pattern = ".hdf")
files

filename <- substr(files, 35, 42) # extract character in string from letter 35 to 42
filename <- paste0("Gbl LST_avg", filename, ".tif")

i <- 1

for (i in 1:35){
  sds <- get_subdatasets(files[i])
  gdal_translate(sds[1], dst_dataset = filename[i])
}

# LOOP + MEAN calculation
for (i in 1:35){
  sds <- get_subdatasets(files[i])
  gdal_translate(sds[1], dst_dataset = filename[i])
  fun = function(x) colMeans(i, na.rm = TRUE)
}

